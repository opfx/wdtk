{
  "$schema": "http://json-schema.org/schema",
  "$id": "WdtkAngularSchematicsApplication",
  "title": "Angular Application Options Schema",
  "type": "object",
  "description": "Generates a new Angular application in the workspace.",
  "properties": {
    "name": {
      "description": "The name of the application.",
      "type": "string",
      "format": "html-selector",
      "$default": {
        "$source": "argv",
        "index": 0
      },
      "x-prompt": "What name would you like to use for the application?"
    },
    "directory": {
      "description": "The directory of the new application.",
      "type": "string"
    },

    "inlineStyle": {
      "description": "When true, includes styles inline in the root component.ts file. Only CSS styles can be included inline.",
      "type": "boolean",
      "default": false,
      "alias": "s"
    },
    "inlineTemplate": {
      "description": "When true, includes template inline in the root component.ts file. Default is false, meaning that an external template file is created and referenced in the root component.ts file.",
      "type": "boolean",
      "default": false,
      "alias": "t"
    },
    "viewEncapsulation": {
      "description": "The view encapsulation strategy to use in the new application.",
      "enum": ["Emulated", "Native", "Node", "ShadowDom"],
      "type": "string"
    },
    "minimal": {
      "description": "When true creates a bare-bones project without any testing framework.",
      "type": "boolean",
      "default": false
    },
    "routing": {
      "description": "When true, creates a routing NgModule",
      "type": "boolean",
      "default": false,
      "x-prompt": "Would you like to add Angular routing?"
    },
    "prefix": {
      "alias": "p",
      "description": "A prefix to apply to generated selectors.",
      "type": "string",
      "format": "html-selector",
      "default": "use-default-prefix"
    },
    "style": {
      "description": "The file extension of preprocessor to use for style files.",
      "type": "string",
      "default": "scss",
      "enum": ["css", "scss", "sass", "less", "styl"],
      "x-prompt": {
        "message": "Which stylesheet format would like to use?",
        "type": "list",
        "items": [
          { "value": "css", "label": "CSS" },
          { "value": "scss", "label": "SCSS   [ https://sass-lang.com/documentation/syntax#scss                ]" },
          { "value": "sass", "label": "Sass   [ https://sass-lang.com/documentation/syntax#the-indented-syntax ]" },
          { "value": "less", "label": "Less   [ http://lesscss.org                                             ]" },
          { "value": "styl", "label": "Stylus [ http://stylus-lang.com                                         ]" }
        ]
      }
    },
    "skipFormat": {
      "description": "Skip formatting files.",
      "type": "boolean",
      "default": false
    },
    "skipTests": {
      "alias": "S",
      "description": "When true, does not create 'spec.ts' test files for the app.",
      "type": "boolean",
      "default": false
    },
    "skipPackageJson": {
      "description": "When true, does not add dependencies to the 'package.json' file.",
      "type": "boolean",
      "default": false
    },
    "skipInstall": {
      "description": "Skip installing dependencies",
      "type": "boolean",
      "default": false
    },
    "e2eTestRunner": {
      "type": "string",
      "enum": ["protractor", "cypress", "none"],
      "description": "Test runner to use for end to end (e2e) tests",
      "default": "cypress"
    },
    "unitTestRunner": {
      "type": "string",
      "enum": ["karma", "jest", "none"],
      "description": "Test runner to use for unit tests",
      "default": "jest"
    }
  },
  "required": ["name"]
}
